---
import '@styles/base.css'
interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Astro description"
    />
    <meta
      name="viewport"
      content="width=device-width"
    />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.svg"
    />
    <meta
      name="generator"
      content={Astro.generator}
    />
    <link
      rel="preconnect"
      href="https://rsms.me/"
    />
    <link
      rel="stylesheet"
      href="https://rsms.me/inter/inter.css"
    />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <div class="light-container">
      <div class="light"></div>
    </div>
  </body>
</html>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const light = document.querySelector('.light') as HTMLElement

    document.addEventListener('mousemove', (e) => {
      light.style.top = `${e.clientY}px`
      light.style.left = `${e.clientX}px`
    })
  })

  document.addEventListener('DOMContentLoaded', () => {
    const sections: NodeListOf<HTMLElement> =
      document.querySelectorAll('section')
    const navItems: NodeListOf<HTMLAnchorElement> =
      document.querySelectorAll('.nav-item')

    if (navItems.length > 0) {
      navItems[0].classList.add('nav-item-selected')
    }

    window.addEventListener('scroll', () => {
      let current: string = ''

      sections.forEach((section) => {
        const sectionTop: number = section.offsetTop
        const sectionHeight: number = section.clientHeight
        if (window.scrollY >= sectionTop - sectionHeight / 3) {
          current = section.getAttribute('id') || ''
        }
      })

      navItems.forEach((item) => {
        item.classList.remove('nav-item-selected')
        if (item.getAttribute('href') === `#${current}`) {
          item.classList.add('nav-item-selected')
        }
      })
    })
  })
</script>
